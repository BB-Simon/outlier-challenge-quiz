{"version":3,"sources":["components/CTAs/index.jsx","components/Progressbar/index.jsx","components/RatingStars/index.jsx","utils/getPercentage.js","utils/helpers.js","Home/styles.js","Home/index.jsx","hooks/useJson.js","utils/getRandomInt.js","utils/constants.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","title","rest","Object","objectWithoutProperties","react_default","a","createElement","StyledButton","NextQuestionCTA","_ref2","handleOnClick","CTAs_Button","assign","onClick","styled","button","_templateObject","_ref3","theme","colors","lightGray","_ref4","dark","_ref5","fontsFamily","_ref6","fontSizes","small","_ref7","Progressbar","_ref$percentage","percentage","_ref$xHeight","xHeight","children","ProgressbarWrapper","ScoreProgressbar","score","minScore","maxScore","Score","ScoreProgressbarWrapper","MinScore","concat","Progressbar_Progressbar","MaxScore","div","Progressbar_templateObject","gray","_templateObject2","white","_templateObject3","_ref8","_ref9","_templateObject4","props","_ref10","_templateObject5","RatingStar","difficulty","map","s","Icon","key","isfilled","has","GoStar","RatingStars_templateObject","lightDark","getPercentage","y","z","toFixed","decode","str","decodeURIComponent","isEncoded","QuizWrapper","section","styles_templateObject","larg","mediumDark","medium","_ref11","_ref12","_ref13","_ref14","_ref15","lightWhite","_ref16","tinyDark","_ref17","_ref18","_ref19","_ref20","_ref21","Quiz","_useJson","path","data","JSON","parse","stringify","_useState","useState","_useState2","slicedToArray","dataToReturn","setDataToReturn","cb","useCallback","temp","i","length","x","Array","isArray","e","toConsumableArray","useEffect","useJson","questionsJsonData","questions","currentQuestion","setCurrentQuestion","_useState3","Set","_useState4","setDifficulty","_useState5","_useState6","correctAnswerCount","setCorrectAnswerCount","_useState7","_useState8","incorrectAnswerCount","setIncorrectAnswerCount","_useState9","_useState10","answeredCount","setAnsweredCount","_useState11","_useState12","setScore","_useState13","_useState14","possibleMinScore","setPossibleMinScore","_useState15","_useState16","possibleMaxScore","setPossibleMaxScore","_useState17","_useState18","result","setResult","_useState19","_useState20","showResult","setShowResult","_useState21","_useState22","answers","setAnswers","_useState23","_useState24","selected","setSelected","_useState25","_useState26","correct","setCorrect","_useState27","_useState28","isItemSelected","setIsItemSelected","_useState29","_useState30","showNextQuestionBtn","setShowNextQuestionBtn","questionsloaded","totalQuestions","category","question","incorrectAnswers","incorrect_answers","correctAnswer","correct_answer","questionDifficulty","progressPercentage","splice","Math","floor","random","possibleCorrectAnswerCount","getClassName","clsx","disabled","components_Progressbar","className","RatingStars","an","indexOf","handleSelectAnAnswer","CTAs_NextQuestionCTA","Progressbar_ScoreProgressbar","darkGray","extraLarg","App","styled_components_browser_esm","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28f72af2.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nexport const Button = ({title, ...rest}) => {\r\n  return (\r\n    <StyledButton {...rest}>\r\n      {title}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport const NextQuestionCTA = ({handleOnClick, ...rest}) => {\r\n  return (\r\n    <Button onClick={handleOnClick} title=\"Next Question\" {...rest} />\r\n  )\r\n}\r\n\r\nconst StyledButton = styled.button`\r\n  width: 100%;\r\n  background: ${({theme}) => theme.colors.lightGray};\r\n  color: ${({theme}) => theme.colors.dark};\r\n  padding: 8px 12px;\r\n  font-family: ${({theme}) => theme.fontsFamily};\r\n  font-size: ${({theme}) => theme.fontSizes.small};\r\n  border: 1px solid ${({theme}) => theme.colors.dark};\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  list-style: none;\r\n  cursor: pointer;\r\n`","import React from 'react';\r\nimport styled from  'styled-components'\r\n\r\nconst Progressbar = ({\r\n  percentage = 100, \r\n  xHeight = 12, \r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <ProgressbarWrapper percentage={percentage} xHeight={xHeight} {...rest}>\r\n      {children}\r\n    </ProgressbarWrapper>\r\n  )\r\n}\r\n\r\nexport default Progressbar;\r\n\r\nexport const ScoreProgressbar = ({score, minScore, maxScore}) => {\r\n  return (\r\n    <div>\r\n      <Score>\r\n        <span>Score {score}%</span>\r\n        <span>Max Score {maxScore}%</span>\r\n      </Score>\r\n      <ScoreProgressbarWrapper>\r\n        <MinScore title={`min score ${minScore} %`} percentage={minScore} />\r\n        <Progressbar \r\n          title={`score ${score}%`} \r\n          percentage={score} \r\n          xHeight={23}\r\n        />\r\n        <MaxScore title={`max score ${maxScore}%`} percentage={maxScore} />\r\n      </ScoreProgressbarWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProgressbarWrapper = styled.div`\r\n  width: ${({percentage}) => `${percentage}%`};\r\n  height: ${({xHeight}) => `${xHeight}px`};\r\n  background: ${({theme}) => theme.colors.gray};\r\n`\r\nconst ScoreProgressbarWrapper = styled.div`\r\n  width: 100%;\r\n  height: 24px;\r\n  background: ${({theme}) => theme.colors.white};\r\n  border: 1px solid ${({theme}) => theme.colors.dark};\r\n  border-radius: 5px;\r\n  position: relative;\r\n`\r\nconst MinScore = styled.div`\r\n  width: ${({percentage}) => `${percentage}%`};\r\n  height: 24px;\r\n  background: ${({theme}) => theme.colors.dark};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`\r\nconst MaxScore = styled.div`\r\n  width: ${props => `${props.percentage}%`};\r\n  height: 24px;\r\n  background: ${({theme}) => theme.colors.lightGray};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`\r\nconst Score = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`","import React from 'react';\r\nimport {GoStar} from 'react-icons/go'\r\nimport styled from 'styled-components'\r\n\r\nconst RatingStar = ({difficulty}) => {\r\n  const stars = [1, 2, 3]\r\n  return (\r\n    <div>\r\n      {stars.map( s => (\r\n        <Icon \r\n          key={s}\r\n          isfilled={difficulty.has(s)}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RatingStar\r\n\r\nconst Icon = styled(GoStar)`\r\n  color: ${({isfilled, theme}) => isfilled ? theme.colors.dark : theme.colors.lightDark};\r\n`","export const getPercentage = (y, z) => ((y/z) * 100).toFixed(0)","/**\r\n * The isEncoded() function checks the @str is encoded or not, if so return true. Otherwise false\r\n * @param {string} str\r\n**/\r\nexport const isEncoded = (str) => typeof str == \"string\" && decodeURIComponent(str) !== str\r\n\r\n/**\r\n * The decode() function function decodes a Uniform Resource Identifier (URI) \r\n * component previously created by encodeURIComponent or by a similar routine.\r\n * @param {string} str\r\n**/\r\nexport const decode = (str) => isEncoded(str) ? decodeURIComponent(str) : str","import styled from 'styled-components';\r\n\r\nexport const QuizWrapper = styled.section`\r\n  width: 650px;\r\n  max-width: 650px;\r\n  min-width: 650px;\r\n  height: 85vh;\r\n  border: 5px solid ${({theme}) => theme.colors.lightGray};\r\n  .container {\r\n    width: 100%;\r\n    height: calc(100% - 20px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    padding: 30px 70px 10px;\r\n    .container-content {\r\n      display: flex;\r\n      flex-direction: column;\r\n      .title {\r\n        margin: 0px;\r\n        font-family: ${({theme}) => theme.fontsFamily};\r\n        font-size: ${({theme}) => theme.fontSizes.larg};\r\n        color: ${({theme}) => theme.colors.mediumDark}\r\n      }\r\n      .category {\r\n        margin: 4px 0;\r\n        font-family: ${({theme}) => theme.fontsFamily};\r\n        font-size: ${({theme}) => theme.fontSizes.small}\r\n        color: ${({theme}) => theme.colors.lightDark}\r\n      }\r\n      .question {\r\n        margin: 34px 0;\r\n        font-family: ${({theme}) => theme.fontsFamily};\r\n        font-size: ${({theme}) => theme.fontSizes.medium};\r\n        color: ${({theme}) => theme.colors.mediumDark}\r\n      }\r\n      .optionsWrapper {\r\n        margin: 0 0 30px;\r\n        padding: 0;\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-column-gap: 50px;\r\n        grid-row-gap: 30px;\r\n        li {\r\n          list-style-type: none;\r\n          .btn {\r\n            width: 100%;\r\n            background: ${({theme}) => theme.colors.lightGray};\r\n            color: ${({theme}) => theme.colors.dark};\r\n            padding: 4px 12px;\r\n          }\r\n          .selected {\r\n            background: ${({theme}) => theme.colors.dark};\r\n            color: ${({theme}) => theme.colors.white};\r\n          }\r\n          .correct {\r\n            color: green;\r\n            cursor: not-allowed;\r\n          }\r\n          .disabled {\r\n            background: ${({theme}) => theme.colors.lightWhite};\r\n            color: ${({theme}) => theme.colors.tinyDark};\r\n            border: 1px solid ${({theme}) => theme.colors.lightGray};\r\n            cursor: not-allowed;\r\n          }\r\n        }\r\n      }\r\n      .result {\r\n        text-align: center;\r\n        font-family: ${({theme}) => theme.fontsFamily};\r\n        font-size: ${({theme}) => theme.fontSizes.medium};\r\n        margin: 0 0 12px;\r\n      }\r\n      .next-question-btn {\r\n        width: 165px;\r\n        background: ${({theme}) => theme.colors.lightGray};\r\n        color: ${({theme}) => theme.colors.dark};\r\n        margin: 0 auto;\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState, useEffect } from 'react';\r\nimport {clsx} from 'clsx';\r\nimport { Button, NextQuestionCTA } from '../components';\r\nimport Progressbar, { ScoreProgressbar } from '../components/Progressbar';\r\nimport RatingStar from '../components/RatingStars';\r\nimport questionsJsonData  from '../questions.json'\r\nimport { getRandomInt } from '../utils/getRandomInt';\r\nimport { getPercentage } from '../utils/getPercentage';\r\nimport { EASY, HARD, MEDIUM } from '../utils/constants';\r\nimport { useJson } from '../hooks';\r\nimport { QuizWrapper } from './styles';\r\n\r\n\r\nconst Quiz = () => {\r\n  const [questions] = useJson(questionsJsonData);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0)\r\n  const [difficulty, setDifficulty] = useState(new Set())\r\n  const [correctAnswerCount, setCorrectAnswerCount] = useState(0)\r\n  const [incorrectAnswerCount, setIncorrectAnswerCount] = useState(0)\r\n  const [answeredCount, setAnsweredCount] = useState(0)\r\n  const [score, setScore] = useState(0)\r\n  const [possibleMinScore, setPossibleMinScore] = useState(0)\r\n  const [possibleMaxScore, setPossibleMaxScore] = useState(100)\r\n  const [result, setResult] = useState(\"\")\r\n  const [showResult, setShowResult] = useState(false)\r\n  const [answers, setAnswers] = useState([])\r\n\r\n  const [selected, setSelected] = useState(null)\r\n  const [correct, setCorrect] = useState(null)\r\n  const [isItemSelected, setIsItemSelected] = useState(false)\r\n  const [showNextQuestionBtn, setShowNextQuestionBtn] = useState(false)\r\n\r\n  \r\n  const questionsloaded = questions.length && questions.length > 0;\r\n  const totalQuestions = questions.length;\r\n  const category = questionsloaded && questions[currentQuestion].category\r\n  const question = questionsloaded && questions[currentQuestion].question\r\n  const incorrectAnswers = questionsloaded && questions[currentQuestion].incorrect_answers\r\n  const correctAnswer = questionsloaded && questions[currentQuestion].correct_answer\r\n  const questionDifficulty = questionsloaded && questions[currentQuestion].difficulty\r\n  const progressPercentage = getPercentage((currentQuestion + 1), totalQuestions)\r\n\r\n  useEffect(() => {\r\n    if(questionDifficulty === EASY){\r\n      setDifficulty(new Set([1]))\r\n    } else if(questionDifficulty === MEDIUM){\r\n      setDifficulty(new Set([1, 2]))\r\n    } else if(questionDifficulty === HARD){\r\n      setDifficulty(new Set([1, 2, 3]))\r\n    }\r\n\r\n    if(incorrectAnswers.length){\r\n      incorrectAnswers.splice(getRandomInt(incorrectAnswers.length), 0, correctAnswer);\r\n      setAnswers([...incorrectAnswers])\r\n    }\r\n  }, [currentQuestion, questionDifficulty, correctAnswer, incorrectAnswers])\r\n\r\n  useEffect(() => {\r\n    if(answeredCount > 0){\r\n      const remaining = totalQuestions - answeredCount\r\n      const possibleCorrectAnswerCount = correctAnswerCount + remaining\r\n      setPossibleMinScore(getPercentage(correctAnswerCount, totalQuestions))\r\n      setPossibleMaxScore(getPercentage(possibleCorrectAnswerCount, totalQuestions))\r\n      setScore(getPercentage(correctAnswerCount, answeredCount))\r\n    }\r\n  }, [answeredCount, correctAnswerCount, totalQuestions])\r\n  \r\n  const handleSelectAnAnswer = (an, i) => {\r\n    setSelected(i)\r\n    setIsItemSelected(true);\r\n    setAnsweredCount(answeredCount + 1)\r\n    setCorrect(answers.indexOf(correctAnswer));\r\n    \r\n    if(an === correctAnswer) {\r\n      setCorrectAnswerCount(correctAnswerCount  + 1)\r\n      setResult(\"Correct!\")\r\n    } else {\r\n      setResult(\"Sorry!\")\r\n      setIncorrectAnswerCount(incorrectAnswerCount + 1)\r\n    }\r\n    if(currentQuestion !== (totalQuestions - 1)){\r\n      setShowNextQuestionBtn(true);\r\n    }\r\n    setShowResult(true);\r\n  }\r\n\r\n  const goToNextQuestion = () => {\r\n    setCurrentQuestion(currentQuestion + 1)\r\n    setIsItemSelected(false)\r\n    setShowNextQuestionBtn(false);\r\n    setResult(\"\")\r\n  }\r\n  \r\n  const getClassName = (i) => {\r\n    return clsx('', {\r\n      'selected': i === selected,\r\n      'correct': i === correct,\r\n      'disabled': i !== selected && i !== correct,\r\n    });\r\n  }\r\n\r\n  if(!questionsloaded) {\r\n    return <p>Loading...</p>\r\n  }\r\n\r\n  return  (\r\n    <QuizWrapper>\r\n      <Progressbar percentage={progressPercentage} /> \r\n      <main className=\"container\">\r\n        <div className=\"container-content\">\r\n          <h1 className=\"title\">Question {currentQuestion + 1} of {totalQuestions}</h1>\r\n          <p className=\"category\">{category}</p>\r\n          <RatingStar difficulty={difficulty} />\r\n          <h2 className=\"question\">{question}</h2>\r\n          <ul className=\"optionsWrapper\">\r\n            {answers && answers.map((a, i) => (\r\n              <li key={i}>\r\n                <Button\r\n                  title={a}\r\n                  className={`btn ${isItemSelected ? getClassName(i) : \"\"}`}\r\n                  onClick={() => handleSelectAnAnswer(a, i)}\r\n                  disabled={isItemSelected}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          {showResult && <h3 className=\"result\">{result}</h3>}\r\n          {showNextQuestionBtn && (\r\n            <NextQuestionCTA \r\n              handleOnClick={goToNextQuestion} \r\n              className=\"next-question-btn\" \r\n            />\r\n          )}\r\n        </div>\r\n        <ScoreProgressbar \r\n          score={score} \r\n          minScore={possibleMinScore} \r\n          maxScore={possibleMaxScore} \r\n        />\r\n      </main>\r\n    </QuizWrapper>\r\n  )\r\n}\r\n\r\nexport default Quiz\r\n\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { decode } from \"../utils\";\r\n\r\n/**\r\n * The useJson() hook takes a JSON path and parse it into an object \r\n * and decodes data if it was encoded by encodeURIComponent or by a similar routine.\r\n * @param {string} path \r\n * @returns {object} Array of objects\r\n */\r\nexport const useJson = (path) => {\r\n  const data = JSON.parse(JSON.stringify(path));\r\n  const [dataToReturn, setDataToReturn] = useState([])\r\n\r\n  const cb = useCallback(() => {\r\n    let temp = []\r\n      for(let i = 0; i < data.length; i++){\r\n        for(var x in data[i]){\r\n          if(Array.isArray(data[i][x])) {\r\n            data[i][x] = data[i][x].map(e => decode(e))\r\n          } else {\r\n            data[i][x] = decode(data[i][x])\r\n          }\r\n        }\r\n        temp = [...temp, data[i]]\r\n      }\r\n      setDataToReturn(temp)\r\n  }, [data])\r\n\r\n  useEffect(() => {\r\n      cb()\r\n  }, [])\r\n\r\n  return [dataToReturn]\r\n}","export const getRandomInt = x => Math.floor(Math.random() * Math.floor(x))","export const EASY = \"easy\"\r\nexport const MEDIUM = \"medium\"\r\nexport const HARD = \"hard\"","/**\r\n * The Theme is is very simple theme object for styled component theme provider\r\n**/\r\nexport const theme = {\r\n  colors: {\r\n    dark: 'rgba(0, 0, 0, 1)',\r\n    tinyDark: 'rgba(0, 0, 0, 0.5)',\r\n    mediumDark: 'rgba(0, 0, 0, 0.7)',\r\n    lightDark: 'rgba(0, 0, 0, 0.1)',\r\n    white: 'rgba(255, 255, 255, 1)',\r\n    lightWhite: 'rgba(255, 255, 255, 0.5)',\r\n    gray: 'rgba(128, 128, 128, 1)',\r\n    lightGray: 'rgba(128, 128, 128, 0.2)',\r\n    darkGray: 'rgba(128, 128, 128, 0.8)',\r\n  },\r\n  fontsFamily: \"system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\r\n  fontSizes: {\r\n    small: \"1em\",\r\n    medium: \"1.5em\",\r\n    larg: \"2em\",\r\n    extraLarg: \"3em\",\r\n  },\r\n};","import React from 'react'\r\nimport { ThemeProvider } from 'styled-components';\r\nimport './App.css'\r\nimport Quiz from './Home';\r\nimport { theme } from './theme';\r\n\r\nfunction App () {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className='App'>\r\n        <Quiz />\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  window.fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}